name: "Terraform Workflow"

on:
  workflow_dispatch:
    inputs:
      terraform_version:
        description: 'Terraform Version'
        required: true
        type: string
        default: '1.5.0'
      runs-on:
        description: 'Runner to execute Github Action'
        required: true
        type: string
        default: 'ubuntu-latest'
      environment:
        description: 'Environment'
        required: true
        type: choice
        default: 'dev'
        options:
          - dev
          - staging
          - prod
      action:
        description: 'Terraform Action'
        required: true
        type: choice
        default: 'plan'
        options:
          - plan
          - apply
          - destroy
          
jobs:
  terraform:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - uses: extractions/netrc@v1
        with:
          machine: pypi.private.domain.com
          username: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terraform ${{ inputs.action }}'
        run: |-
          set -x
          cat << EOF > ~/.netrc
          machine github.com
          login $GITHUB_USERNAME
          password $PYPI_USERNAME
          EOF

          chmod 600 ~/.netrc
          
          bash build.sh ${{ inputs.action }}

        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SECRET_ID: ${{ secrets.ARM_SECRET_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
