name: "Docker Build and Push Image"

on:
  workflow_call:
    inputs:
      docker_file_path:
        required: false
        type: string
        default: "./Dockerfile" 
      docker_registry:
        required: false
        type: string
      runs-on:
        required: false
        type: string
      versionSpec:
        required: false
        type: string
        default: '5.12.x'
      configFilePath:
        required: false
        type: string
        default: './GitVersion.yml'
      dotNetVersion:
        required: false
        type: string
        default: '3.1.x'
    secrets:
      DOCKER_CONTAINER_REGISTRY:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  docker_build:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Docker Login - Azure Container Registry
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          login-server: ${{ secrets.DOCKER_CONTAINER_REGISTRY }}

      - name: Install DotNet
        uses: actions/setup-dotnet@v1
      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: ${{ inputs.versionSpec }}
          includePrerelease: false
          ignoreFailedSources: false
          preferLatestVersion: true

      - name: Bump Version
        id: version
        uses: gittools/actions/gitversion/execute@v1.1.1

      - name: Build and Push Image o Container Registry
        shell: bash
        run: |
          set -x
          build_image() {
            export DOCKER_CONTAINER_REGISTRY=${{ secrets.DOCKER_CONTAINER_REGISTRY }}
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            export DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}
          
          if [[ -f pre-req.sh ]]; then

              bash pre-req.sh
              export DOCKER_BUILD=1
              docker build -f ${{ inputs.docker_file_path }} -t ${{ inputs.docker_registry }}/${{ github.event.repository.name }}:${{ steps.version.outputs.SemVer }} $(
                if [ -n "$__ARG" ]; then
                    for i in $__ARG; do
                        echo "--build-arg "$i"";
                    done
                fi
              ) .
          else
             export DOCKER_BUILD=1
              docker build -f ${{ inputs.docker_file_path }} -t ${{ inputs.docker_registry }}/${{ github.event.repository.name }}:${{ steps.version.outputs.InformationalVersion }} $(
                if [ -n "$__ARG" ]; then
                    for i in $__ARG; do
                        echo "--build-arg "$i"";
                    done
                fi
              ) .
          fi
          }

          build_image
          
          push_image() {
            __TAG=$1
          
            export DOCKER_CONTAINER_REGISTRY=${{ secrets.DOCKER_CONTAINER_REGISTRY }}
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            export DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}

            docker push ${{ inputs.docker_registry }}/${{ github.event.repository.name }}:${{ steps.version.outputs.InformationalVersion }}
          }

          push_image
        env:
          DOCKER_CONTAINER_REGISTRY: ${{ secrets.DOCKER_CONTAINER_REGISTRY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.PAT }}
