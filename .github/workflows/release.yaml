name: "GitVerson Workflow"

on:
  workflow_call:
    inputs:
      versionSpec:
        required: false
        type: string
        default: '6.x'
      configFilePath:
        required: false
        type: string
        default: './GitVersion.yml'
      dotNetVersion:
        required: false
        type: string
        default: '3.1.x'
      runs-on:
        required: false
        type: string
        default: 'ubuntu-latest'
      environment:
        required: false
        type: string
        default: ''

jobs:
  release:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      #- name: Install DotNet
      #  uses: actions/setup-dotnet@v1
      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: ${{ inputs.versionSpec }}
          includePrerelease: false
          ignoreFailedSources: false
          preferLatestVersion: true

      - name: Bump Version
        id: version
        uses: gittools/actions/gitversion/execute@v3.0.0
        with:
          useConfigFile: true
          configFilePath: ./GitVersion.yml

      - name: "✏️ Generate release changelog"
        uses: heinrichreimer/action-github-changelog-generator@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Version Configuration
        run: |-
          set -x
          cat <<EOF > version.json
          {
            "version": "${{ steps.version.outputs.SemVer }}"
          }
          EOF
          cat version.json
  
      - name: Conventional Changelog Action
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: './version.json'
          skip-bump: 'true'
          git-message: "Update Changelog"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Showing Version
        run: |-
          set -x
          cat version.json

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.SemVer }}
          release_name: Release ${{ steps.version.outputs.SemVer }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false