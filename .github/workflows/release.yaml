name: "GitVerson Workflow"

on:
  workflow_call:
    inputs:
      versionSpec:
        required: false
        type: string
        default: '5.12.x'
      configFilePath:
        required: false
        type: string
        default: './GitVersion.yml'
      dotNetVersion:
        required: false
        type: string
        default: '3.1.x'
      runs-on:
        required: false
        type: string
        default: 'ubuntu-latest'
      environment:
        required: false
        type: string
        default: ''

jobs:
  reusable-workflow:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Input Version of GitVertion
        if: ${{ inputs.versionSpec }} != ''
        run: echo ${{ inputs.versionSpec }}

      - name: Input Gitversion Vonfiguration File Path.
        if: ${{ inputs.configFilePath }} != ''
        run: echo ${{ inputs.configFilePath }}

      - name: Input DotNet Install Version
        if: ${{ inputs.dotNetVersion }} != ''
        run: echo ${{ inputs.dotNetVersion }}

      - name: Input Github Agent
        if: ${{ inputs.username }} != ''
        run: echo ${{ inputs.runs-on }}

      - name: Input Environment
        if: ${{ inputs.environment }} != ''
        run: echo ${{ inputs.environment }}

      - uses: actions/checkout@v2.3.4 # Necessary to access local action
      
      #- name: Local Action Call Without Input
      #  id: local-action
      #  uses: ./.github/actions/release
      #  with:
      #    name: "World"
      #- name: Local Action Output
      #  run: echo "${{ steps.local-action.outputs.random }}"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Install DotNet
        uses: actions/setup-dotnet@v1
      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: ${{ inputs.versionSpec }}
          includePrerelease: false
          ignoreFailedSources: false
          preferLatestVersion: true
      
      - name: Run GitVersion
        run: |-
          GitVersion /?
          GitVersion /showconfig

